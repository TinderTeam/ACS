
<script src="../../Scripts/jquery.progressbar/js/jquery.progressbar.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#bar").progressBar(0, { barImage: '../../Scripts/jquery.progressbar/images/progressbg_green.gif', showText: false, speed: 5 });
        });
</script>
<div class="mini-toolbar" style="border-bottom:0;padding:0px;">       
    <table style="width:100%;">
        <tr>
            <td style="width:100%;">
                <a class="mini-button" iconCls="icon-add" onclick="onModifyControl('Create')">增加</a>
                <a class="mini-button" iconCls="icon-edit" onclick="onModifyControl('Modify')">编辑</a>
                <a class="mini-button" iconCls="icon-remove" onclick="onRemoveControl()">删除</a>
                <a class="mini-button" iconCls="icon-node" onclick="updateInfo()">更新信息</a>    
                <a class="mini-button" iconCls="icon-node" onclick="downloadcard()">下发卡信息</a>   
                <span class="bar Hide" style="text-align:right" >操作进度：<span class="progressBar" id="bar"></span></span>  
            </td>
        </tr>
    </table>           
</div>
<div class = "mini-fit">
    <div id ="controlGird" class="mini-datagrid" style="width:100%;height:100%;" allowResize="true"
            url="Load"  idField="ControlID" multiSelect="true">
            <div property="columns">
                <div type="checkcolumn" ></div>                  
                <div field="ControlName" width="70" headerAlign="center" allowSort="true">控制器名称</div>
                <div field="Code" width="50" headerAlign="center" allowSort="true" >控制器编号</div>
                <div field="Online" width="50" headerAlign="center" allowSort="true" >控制器状态</div>
                <div field="TypeID" width="50" headerAlign="center" allowSort="true" >控制器类型</div>
                <div field="Serial" width="50" headerAlign="center" allowSort="true" >序列号</div>
                <div field="Ip" width="50" headerAlign="center" allowSort="true">IP地址</div>
                <div field="Port" width="30" headerAlign="center" allowSort="true">端口号</div>
            </div>
    </div>
</div>

<script type="text/javascript">

    var barClock = 2000;       //定时器更新间隔
    var barStart = false;
    var barValue = 0;
    var barUUID = "";
    var barTimer;


    //新增、编辑窗口页面
    function onModifyControl(type) {
        var tree = mini.get("deviceTree");
        var controlGrid = mini.get("#controlGird");
        var rows = controlGrid.getSelecteds();
        var row = controlGrid.getSelected();
        if (type == 'Modify') {
            if (rows.length != 1) {
                mini.alert("请选中一条记录");
                return;
            }
            var titleName = "编辑控制器";
            var value = row.ControlID;
        } else if (type == 'Create') {
            var titleName = "新增控制器";
            var value = "";
        }
        mini.open({
            url: "../DeviceManage/ShowPage",
            title: titleName, width: 350, height: 350,
            onload: function () {
                var iframe = this.getIFrameEl();
                var data = { action: type, id: value };
                iframe.contentWindow.Show(data);
            },
            ondestroy: function (action) {

                if (action == "ok")     //关闭窗口时点击的是确定
                {
                    tree.load("../DeviceManage/LoadTree");
                    controlGrid.reload();
                }
            }
        });
    }
    //删除控制器
    function onRemoveControl(e) {
        var tree = mini.get("deviceTree");
        var controlGrid = mini.get("#controlGird");
        var rows = controlGrid.getSelecteds();
        if (rows.length > 0) {
            if (confirm("将更新与该控制器有关的权限信息，是否继续？")) {
                //获取选中的对象ID
                var ids = [];
                for (var i = 0, l = rows.length; i < l; i++) {
                    var r = rows[i];
                    ids.push(r.ControlID);
                }
                var idList = mini.encode(ids);

                var messageid = mini.loading("正在删除控制器及配置信息...");
                setTimeout(function () {
                    mini.hideMessageBox(messageid);
                }, 3000);

                $.ajax({
                    url: "../DeviceManage/Delete",
                    type: 'post',
                    data: { data: idList },
                    cache: false,
                    success: function (json) {
                        var rsp = mini.decode(json);
                        if (rsp.ErrorCode == "Success") {
                            tree.load("../DeviceManage/LoadTree");
                            controlGrid.reload();
                            mini.hideMessageBox(messageid);
                            mini.alert("操作成功");

                        }
                        else {
                            alert(text);
                            mini.hideMessageBox(messageid);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(jqXHR.responseText);
                    }
                });
            }


        } else {
            mini.alert('请选择一个控制器');
        }

    }

    //更新设备数据
    function updateInfo() {
        var tree = mini.get("deviceTree");
        var controlGrid = mini.get("#controlGird");
        var rows = controlGrid.getSelecteds();
        if (rows.length > 0) {
            if (confirm("确定下发选中记录？")) {
                var ids = [];
                for (var i = 0, l = rows.length; i < l; i++) {
                    var r = rows[i];
                    ids.push(r.ControlID);
                }
                var idList = mini.encode(ids);
                $.ajax({
                    url: "../DeviceManage/updateDeviceInfo?idList=" + idList,
                    type: 'post',
                    success: function (json) {
                        var Rsp = mini.decode(json);
                        if (Rsp.ErrorCode == "Success") {
                            mini.alert("操作成功...");
                        } else {
                            mini.alert(Rsp.Message);
                        }
                    },
                    error: function () {
                    }
                });
            }
        } else {
            alert("请选中一条记录");
        }
    }

    //下发卡数据
    function downloadcard() {
        var tree = mini.get("deviceTree");
        var controlGrid = mini.get("#controlGird");
        var rows = controlGrid.getSelecteds();
        if (rows.length > 0) {
            if (confirm("确定下发选中记录？")) {
                var ids = [];
                for (var i = 0, l = rows.length; i < l; i++) {
                    var r = rows[i];
                    ids.push(r.ControlID);
                }
                var idList = mini.encode(ids);
                $.ajax({
                    url: "../EmployeeManage/DownAllCardList?idList=" + idList,
                    type: 'post',
                    success: function (json) {
                        var Rsp = mini.decode(json);
                        if (Rsp.ErrorCode == "Success") {
                            barUUID = Rsp.Obj;
                            $(".bar").removeClass("Hide");
                            barStart = true;
                            barTimer = setInterval(barHandler, barClock);
                        } else {
                            mini.alert(Rsp.Message);
                        }
                    },
                    error: function () {
                    }
                });
            }
        } else {
            alert("请选中一条记录");
        }
    }
    

    //进度条刷新过程
    var barHandler = function () {
        if (barStart) {
            url = "/Monitor/BarStatus?UUID=" + barUUID;

            $.ajax({
                url: url,
                type: 'post',
                data: "",
                cache: false,
                success: function (text) {
                    var p = eval('(' + text + ')');
                    barValue = p.Obj;
                    $("#bar").progressBar(barValue);
                    if (barValue == 100) {
                        clearInterval(barTimer);
                        setTimeout(hideBar, 2000);

                    }

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(text);
                }
            });
        }
    }

    function hideBar() {
        $(".bar").addClass('Hide');
        $("#bar").progressBar(0);
    }
</script>
